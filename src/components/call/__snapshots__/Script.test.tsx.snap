// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Script component should be rendered if passed a valid object 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <span />,
  "nodes": Array [
    <span />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Unknown
        contactIndex={0}
        issue={
                Object {
                        "categories": Array [],
                        "id": "1",
                        "inactive": false,
                        "link": "",
                        "linkTitle": "",
                        "name": "testName",
                        "outcomeModels": Array [],
                        "reason": "",
                        "script": "",
                        "slug": "",
                      }
        }
        locationState={
                Object {
                        "address": "1234",
                        "cachedCity": "Anytown",
                        "locationFetchType": "BROWSER_GEOLOCATION",
                        "splitDistrict": false,
                        "uiState": "LOCATION_FOUND",
                      }
        }
        t={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "contactIndex": 0,
          "issue": Object {
            "categories": Array [],
            "id": "1",
            "inactive": false,
            "link": "",
            "linkTitle": "",
            "name": "testName",
            "outcomeModels": Array [],
            "reason": "",
            "script": "",
            "slug": "",
          },
          "locationState": Object {
            "address": "1234",
            "cachedCity": "Anytown",
            "locationFetchType": "BROWSER_GEOLOCATION",
            "splitDistrict": false,
            "uiState": "LOCATION_FOUND",
          },
          "t": [Function],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <span />,
        "_debugID": 2,
        "_renderedOutput": <span />,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Unknown
    contactIndex={0}
    issue={
        Object {
            "categories": Array [],
            "id": "1",
            "inactive": false,
            "link": "",
            "linkTitle": "",
            "name": "testName",
            "outcomeModels": Array [],
            "reason": "",
            "script": "",
            "slug": "",
          }
    }
    locationState={
        Object {
            "address": "1234",
            "cachedCity": "Anytown",
            "locationFetchType": "BROWSER_GEOLOCATION",
            "splitDistrict": false,
            "uiState": "LOCATION_FOUND",
          }
    }
    t={[Function]}
/>,
}
`;
