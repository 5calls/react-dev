// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Contact offices should display if available 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <span />,
  "nodes": Array [
    <span />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ContactOffices
        contactIndex={0}
        currentIssue={
                Object {
                        "categories": Array [],
                        "contacts": Array [
                          Object {
                            "fieldOffices": Array [
                              Object {
                                "city": "San Francisco",
                                "phone": "5555551212",
                              },
                            ],
                            "id": "101",
                            "name": "dude",
                            "outcomeModels": Array [
                              Object {
                                "label": "vm",
                                "status": "vm",
                              },
                            ],
                            "party": "",
                            "phone": "5555551212",
                            "reason": "this is your dude",
                            "state": "CA",
                          },
                        ],
                        "id": "1",
                        "inactive": false,
                        "link": "",
                        "linkTitle": "",
                        "name": "testName",
                        "outcomeModels": Array [],
                        "reason": "",
                        "script": "",
                      }
        }
        t={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ContactOffices {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "contactIndex": 0,
          "currentIssue": Object {
            "categories": Array [],
            "contacts": Array [
              Object {
                "fieldOffices": Array [
                  Object {
                    "city": "San Francisco",
                    "phone": "5555551212",
                  },
                ],
                "id": "101",
                "name": "dude",
                "outcomeModels": Array [
                  Object {
                    "label": "vm",
                    "status": "vm",
                  },
                ],
                "party": "",
                "phone": "5555551212",
                "reason": "this is your dude",
                "state": "CA",
              },
            ],
            "id": "1",
            "inactive": false,
            "link": "",
            "linkTitle": "",
            "name": "testName",
            "outcomeModels": Array [],
            "reason": "",
            "script": "",
          },
          "t": [Function],
        },
        "refs": Object {},
        "showField": [Function],
        "state": Object {
          "showFieldOfficeNumbers": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <span />,
        "_debugID": 2,
        "_renderedOutput": <span />,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ContactOffices
    contactIndex={0}
    currentIssue={
        Object {
            "categories": Array [],
            "contacts": Array [
              Object {
                "fieldOffices": Array [
                  Object {
                    "city": "San Francisco",
                    "phone": "5555551212",
                  },
                ],
                "id": "101",
                "name": "dude",
                "outcomeModels": Array [
                  Object {
                    "label": "vm",
                    "status": "vm",
                  },
                ],
                "party": "",
                "phone": "5555551212",
                "reason": "this is your dude",
                "state": "CA",
              },
            ],
            "id": "1",
            "inactive": false,
            "link": "",
            "linkTitle": "",
            "name": "testName",
            "outcomeModels": Array [],
            "reason": "",
            "script": "",
          }
    }
    t={[Function]}
/>,
}
`;

exports[`Contact offices should not display if unavailable 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <span />,
  "nodes": Array [
    <span />,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ContactOffices
        contactIndex={0}
        currentIssue={
                Object {
                        "categories": Array [],
                        "contacts": Array [
                          Object {
                            "id": "101",
                            "name": "dude",
                            "party": "",
                            "phone": "5555551212",
                            "reason": "this is your dude",
                            "state": "CA",
                          },
                        ],
                        "id": "1",
                        "inactive": false,
                        "link": "",
                        "linkTitle": "",
                        "name": "testName",
                        "outcomeModels": Array [
                          Object {
                            "label": "unavailable",
                            "status": "unavailable",
                          },
                          Object {
                            "label": "contact",
                            "status": "contact",
                          },
                        ],
                        "reason": "",
                        "script": "",
                      }
        }
        t={[Function]}
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ContactOffices {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "contactIndex": 0,
          "currentIssue": Object {
            "categories": Array [],
            "contacts": Array [
              Object {
                "id": "101",
                "name": "dude",
                "party": "",
                "phone": "5555551212",
                "reason": "this is your dude",
                "state": "CA",
              },
            ],
            "id": "1",
            "inactive": false,
            "link": "",
            "linkTitle": "",
            "name": "testName",
            "outcomeModels": Array [
              Object {
                "label": "unavailable",
                "status": "unavailable",
              },
              Object {
                "label": "contact",
                "status": "contact",
              },
            ],
            "reason": "",
            "script": "",
          },
          "t": [Function],
        },
        "refs": Object {},
        "showField": [Function],
        "state": Object {
          "showFieldOfficeNumbers": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <span />,
        "_debugID": 4,
        "_renderedOutput": <span />,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ContactOffices
    contactIndex={0}
    currentIssue={
        Object {
            "categories": Array [],
            "contacts": Array [
              Object {
                "id": "101",
                "name": "dude",
                "party": "",
                "phone": "5555551212",
                "reason": "this is your dude",
                "state": "CA",
              },
            ],
            "id": "1",
            "inactive": false,
            "link": "",
            "linkTitle": "",
            "name": "testName",
            "outcomeModels": Array [
              Object {
                "label": "unavailable",
                "status": "unavailable",
              },
              Object {
                "label": "contact",
                "status": "contact",
              },
            ],
            "reason": "",
            "script": "",
          }
    }
    t={[Function]}
/>,
}
`;
